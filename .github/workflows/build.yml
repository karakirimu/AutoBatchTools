name: Build

on: [ workflow_dispatch ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: MinSizeRel
  QT_VERSION: '6.1.3'

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - { name: "Windows Latest x64", os: windows-latest, host: windows, platform: win, environment_script: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat", deploy_script: "./res/deploy/github_windows.bat", deploy_folder: "autobatchtools-windows-x64"}
#         - { name: "Ubuntu Latest x64", os: ubuntu-latest, host: linux, platform: linux, deploy_script: "./res/deploy/github_ubuntu.sh", deploy_folder: "autobatchtools-ubuntu-x64"}
#         - { name: "macOS Latest x64",   artifact: "macOS-x64.zip",   os: macos-latest, host: mac, platform: mac }
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    steps:
    - uses: actions/checkout@v2
    
    - name: Cache
      id: cache-qt
      uses: actions/cache@v1.2.0
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: |
          '${{ github.workspace }}/Qt-${{ matrix.config.os }}/'
        # An explicit key for restoring and saving the cache
        key: ${{ matrix.config.host }}-${{env.QT_VERSION}}-Qt
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{env.QT_VERSION}}
        host: ${{ matrix.config.host }}
        target: 'desktop'
#         arch: '' Windows w/ Qt >= 5.15: win64_msvc2019_64
        dir: '${{ github.workspace }}/Qt-${{ matrix.config.os }}/'
        install-deps: 'true'
#         modules: 'none'
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        setup-python: 'true'
        tools: 'tools_ifw,4.0,qt.tools.ifw.40 tools_qtcreator,5.0.1-0-202109140334,qt.tools.qtcreator'
        set-env: 'true'
        tools-only: 'false'
        aqtversion: '==1.1.3'
        py7zrversion: '==0.14.0'
        extra: '--external 7z'
        
    - name: Install ninja-build tool
      # You may pin to the exact commit or the version.
      # uses: seanmiddleditch/gha-setup-ninja@16b940825621068d98711680b6c3ff92201f8fc0
      uses: seanmiddleditch/gha-setup-ninja@v3
      with:
        # Version of ninja-build to install
#         version: # default is 1.10.0
        # Override default platform with one of [win, mac, linux]
        platform: ${{ matrix.config.platform }}
        # Destination directory, will be added to PATH
#         destination: # optional, default is ninja-build
    
    - name: Configure CMake
      working-directory: ${{github.workspace}}
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      working-directory: ${{github.workspace}}
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}} --config ${{env.BUILD_TYPE}}
      
    - name: Test2
      working-directory: ${{github.workspace}}
      run: tree /f
      
    - name: Run Deploy Script
      working-directory: ${{github.workspace}}
      run: ${{ matrix.config.deploy_script }} ${{env.QT_VERSION}} "Qt-${{ matrix.config.os }}"

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        working-directory: ${{github.workspace}}
        # Artifact name
        name: ${{ matrix.config.name }}
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{github.workspace}}/build
        # The desired behavior if no files are found using the provided path.
        if-no-files-found: warn # optional, default is warn
        # Duration after which artifact will expire in days. 0 means using default retention.
        # Minimum 1 day. Maximum 90 days unless changed from the repository settings page.
        retention-days: 1
